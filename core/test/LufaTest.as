package  {	import com.pixelboob.lufa.Interpreter;	import com.pixelboob.lufa.InterpreterEvent;	import com.pixelboob.lufa.LuaScript;		import flash.display.Sprite;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLLoaderDataFormat;	import flash.net.URLRequest;	import flash.utils.ByteArray;		/**	 * @author moj	 */	public class LufaTest extends Sprite	{		private var scripts : Array;		public function LufaTest()		{			this.scripts = ["move",				"loadk",				"loadbool",				"loadbool2",				"loadnil",				"loadnil2",				"global", // Both get + set global				"table", // New, set, and get table				"math", // add, sub, mul, div, mod, pow				"math2", // Constant folding tests				"unm",				"len",				"concat"		/*		"getupval",				"self",				"unm",				"not",				"len",				"concat",				"jmp",				"eq",				"lt",				"le",				"test",				"testset",				"call",				"tailcall",				"return",				"forloop",				"forprep",				"tforloop",				"setlist",				"close",				"closure",				"vararg"*/];						testNext();		}				private function testNext() : void		{			var scriptName : String = this.scripts.shift();			var loader : URLLoader = new URLLoader();			loader.dataFormat = URLLoaderDataFormat.BINARY;			loader.addEventListener(Event.COMPLETE, this.handleLoaded);			loader.load(new URLRequest("../testscripts/"+scriptName+".luac"));			}				public function handleScriptComplete(event:InterpreterEvent) : void		{			if(this.scripts.length > 0)			{				testNext();			}		}		private function handleLoaded(event : Event) : void		{			var loader : URLLoader = event.target as URLLoader;						loader.removeEventListener(Event.COMPLETE, this.handleLoaded);			trace("Loaded " + (loader.data as ByteArray).length);						var arr : ByteArray = loader.data as ByteArray;			var luaScript : LuaScript = new LuaScript(arr);						var interpreter : Interpreter = new Interpreter();			interpreter.addEventListener(InterpreterEvent.COMPLETE, this.handleScriptComplete);			interpreter.run(luaScript);		}	}}